diamonds
libarary('ggplot2')
library('ggplot2')
diamonds
head(diamonds,n=1)
diamonds$volume = diamonds$x * diamonds$y * diamonds$z
head(diamonds,n=1)
qplot(carat, volume, data=diamonds)
qplot(carat, volume, data=diamonds, color=clarity)
qplot(price, volume, data=diamonds, color=carat)
qplot(price, volume, data=diamonds, color=cut)
qplot(price, volume, data=diamonds, color=cut, shape=clarity)
qplot(price, data=diamonds, geom='histogram')
qplot(clarity, data=diamonds, geom='histogram')
qplot(clarity, data=diamonds, geom='bar')
qplot(clarity, data=diamonds, geom='boxplot')
qplot(clarity, data=diamonds, geom='point')
qplot(clarity ~ price, data=diamonds, geom='bar')
qplot(clarity ~price, data=diamonds, geom='bar')
qplot(clarity~price, data=diamonds, geom='bar')
package.install("plotly")
install.package("plotly")
install.packages("plotly")
which R
install.packages("plotly")
library(plotly)
p <- plotly(username="mehul", key="hqd2x6lczd")
data <- list(
list(
z = matrix(c(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100), nrow=50, ncol=50),
scl = "Portland",
type = "heatmap"
)
)
layout <- list(title = "Portland")
response <- p$plotly(data, kwargs=list(layout=layout, filename="Portland-heatmap", fileopt="overwrite"))
url <- response$url
filename <- response$filename
rpois(10,1)
rpois(10,10)
mean(rpois(10,10))
?rbinom
rbinom(2, 2, 0.1)
rbinom(100, 2, 0.1)
rbinom(100, 1, 0.1)
rbinom(100, 1, 0.5)
rbinom(100, 2, 0.5)
rbinom(100, 100, 0.5)
letters
str(letter)
str(letters)
environment(letters)
ls(environment(letters))
ls(environment(makeCacheMatrix))
?ls
packages.install('mysqlr')
install.packages("RMySQL")
?quantile
x <- 1:10
quantile(x)
median(x)
range(x)
require(devtools)
install.packages("devtools")
require(devtools)
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
library(ggplot2)
library("ggplot2")
str(economics)
head(economics)
qplot(date, pop, data = economics)
qplot(date, pop, data = economics, geom="line")
qplot(date, unemploy/pop, data = economics, geom="line")
?as.POSIXct.Date
as.POSIXct.Date(economics[1,1])
class(as.POSIXct.Date(economics[1,1]))
as.POSIXct.Date(economics[1,1])$day
as.POSIXct.Date(economics[1,1])$year
as.POSIXlt(economics[1,1])$year
as.POSIXlt(economics[1,1])
as.POSIXlt(economics[1,1])$day
as.POSIXlt(economics[1,1])$month
as.POSIXlt(economics[1,1])
str(as.POSIXlt(economics[1,1]))
qplot(unemploy / pop, uempmed, data = economics,      geom = c("point", "path"))
qplot(unemploy / pop, uempmed, data = economics,geom = c("point", "path"))
qplot(unemploy / pop, uempmed, data = economics,geom = "path", colour = year(date)) + scale_area()
year <- function(x) as.POSIXlt(x)$year + 1900
qplot(unemploy / pop, uempmed, data = economics,geom = "path", colour = year(date)) + scale_area()
qplot(unemploy / pop, uempmed, data = economics,geom = "path", colour = year(date)) + scale_area()
qplot(unemploy / pop, uempmed, data = economics,geom = "path", colour = year(date)) + scale_area()
qplot(carat, data = diamonds, facets = color ~ .,geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
qplot(carat, data = diamonds, facets = price ~ .,geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
?sample
sample(100,2)
sample(1:100,2)
sample(nrow(diamonds), 5)
sample(nrow(diamonds), 100)
dsmall = diamonds[diamonds[sample(nrow(diamonds), 100),]]
sample(nrow(diamonds), 100)
dsmall = diamonds[diamonds[sample(nrow(diamonds), ]100),]
dsmall = diamonds[diamonds[sample(nrow(diamonds)), ]100,]
dsmall = diamonds[diamonds[sample(nrow(diamonds), 100), ]]
diamonds[sample(nrow(diamonds), 100), ]
diamonds[sample(nrow(diamonds), 100), ]
diamonds[sample(nrow(diamonds), 100), ]
dsmall <- diamonds[sample(nrow(diamonds), 100), ]
qplot(carat, data = dsmall, facets = price ~ .,geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
dsmall <- diamonds[sample(nrow(diamonds), 10), ]
qplot(carat, data = dsmall, facets = price ~ .,geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
qplot(carat, ..density.., data = diamonds, facets = color ~ ., geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
qplot(carat, ..density.., data = diamonds, facets = color ~ ., geom = "histogram", binwidth = 0.1, xlim = c(0, 3))
?plotmath
sample(1:10)
sample(10)
sample(10)
sample(10)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", "3141f794331d97eee6b6")
Sys.setenv(GITHUB_CONSUMER_SECRE = "61fd0a274cdd7698483b0f109b727b09d398f872")
Sys.getenv("GITHUB_CONSUMER_SECRET")
Sys.setenv(GITHUB_CONSUMER_SECRET = "61fd0a274cdd7698483b0f109b727b09d398f872")
Sys.getenv("GITHUB_CONSUMER_SECRET")
myapp <- oauth_app("github", "3141f794331d97eee6b6")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
?oauth2.0_token
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
install.packages('httpuv')
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
req
content(req)
packages.install('jsonlite')
install.packages('jsonlite')
content(req)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
content(req)
class(req)
class(content(req))
str(content(req))
names(content(req))
names(content(req))
content(req)
head(content(req))
head(content(req), n=1)
content(req)[0]
content(req)[[0]]
content(req)[1]
class(content(req)[1])
?content
content(req)[1]
length(content(req))
class(content(req))
class(content(req)[30])
class(content(req)[31])
class(content(req)[3111])
class(content(req)[30])
content(req)[1]["name"]
content(req)[1]$name
content(req)[1]
content(req)[1]$open_issues_count
content(req)[1][[1]]
name(content(req)[1][[1]])
names(content(req)[1][[1]])
content(req)[1][[1]]$name
content(req)[1]
content(req)[1][[1]]$name
content(req)[2][[1]]$name
content(req)[30][[1]]$name
content(req)[31][[1]]$name
content(req)[33][[1]]$name
content(req)[30][[1]]$name
length(content(req))
for(i <= length(content(req))) {
if(content(req)[[i]]$name == "datasharing") print(content(req)[[i]])
}
for(i in 1:length(content(req))) {
if(content(req)[[i]]$name == "datasharing") print(content(req)[[i]])
}
for(i in 1:length(content(req))) {
if(content(req)[[i]]$name == "datasharing") print(content(req)[[i]]$"created_at")
}
for(i in 1:numRepos)) {
if(content(req)[[i]]$name == repoName) print(content(req)[[i]]$"created_at")
}
for(i in 1:numRepos) {
if(content(req)[[i]]$name == repoName) print(content(req)[[i]]$"created_at")
}
for(i in 1:numRepos) {
if(content(req)[[i]]$name == repoName) print(content(req)[[i]]$"created_at")
}
numRepos <- length(content(req))
repoName <- "datasharing"
for(i in 1:numRepos) {
if(content(req)[[i]]$name == repoName) print(content(req)[[i]]$"created_at")
}
foo <- 'hoot'
paste(foo, "lala")
length(paste(foo, "lala"))
?paste
length(paste(foo, "lala", sep("/")))
length(paste(foo, "lala", sep = "/"))
paste(foo, "lala", sep = "/")
username <- "jtleek"
url <- paste("https://api.github.com/users/", username, "/repos", sep="")
url
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
#    Insert your values below - if secret is omitted, it will look it up in
#    the GITHUB_CONSUMER_SECRET environmental variable.
#
#    Use http://localhost:1410 as the callback url
# Set environment variables:
# Sys.setenv(GITHUB_CONSUMER_SECRET = "hooty”)
myapp <- oauth_app("github", "3141f794331d97eee6b6")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
username <- "jtleek"
url <- paste("https://api.github.com/users/", username, "/repos", sep="")
req <- GET(url, gtoken)
stop_for_status(req)
content(req)
numRepos <- length(content(req))
repoName <- "datasharing"
for(i in 1:numRepos) {
if(content(req)[[i]]$name == repoName) print(content(req)[[i]]$"created_at")
}
# OR:
# req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
# stop_for_status(req)
# content(req)
?file.download
?download.file
getwd()
setwd("/Users/mehulmandania/Dropbox/sandbox/GettingCleaningData/week2")
getwd()
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "surveydata.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata-data-ss06pid.csv", "surveydata.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata-data-ss06pid.csv", "surveydata.csv", method="curl")
acs <- read.csv("getdata-data-ss06pid.csv")
head(acs)
str(acs)
library("sqldf")
install.packages("sqldf")
sqldf("select pwgtp1 from acs where AGEP < 50")
library("sqldf")
sqldf("select pwgtp1 from acs where AGEP < 50")
class(sqldf("select pwgtp1 from acs where AGEP < 50"))
dim(sqldf("select pwgtp1 from acs where AGEP < 50"))
sqldf("select * from acs where AGEP < 50")
dim(sqldf("select * from acs where AGEP < 50"))
unique(acs$AGEP)
sqldf("select distinct AGEP from acs")
dim(sqldf("select distinct AGEP from acs"))
dim(unique(acs$AGEP))
length(unique(acs$AGEP))
sqldf("select unique AGEP from acs")
sqldf("select unique * from acs")
summary(unique(acs$AGEP))
class(sqldf("select distinct AGEP from acs"))
str(sqldf("select distinct AGEP from acs"))
str(sqldf("select distinct AGEP from acs")$AGEP)
summary(sqldf("select distinct AGEP from acs")$AGEP)
nchar("hoot")
nchar(c("hoot", "poo")
)
sqldf("select distinct AGEP from acs")$AGEP == unique(acs$AGEP)
install.packages("XML")
library("XML")
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
doc <- xmlTreeParse(url, useInternal=TRUE)
rootNode <- xmlRoot(doc)
html <- htmlTreeParse(url, useInternalNodes=T)
html
class(html)
html <- GET(url)
htl
html
class(html)
content <- content(html, as"text")
content <- content(html, as="text")
class(content)
nrow(content)
length(content)
content[1]
parsedHtml <- htmlParse(content, asText=TRUE)
class(parsedHtml)
parsedHtml[1]
parsedHtml[0]
parsedHtml
class(parsedHtml)
?HTMLInternalDocument-class
?HTMLInternalDocument
content
str(content)
parsedHtml[[1]]
parsedHtml
head(parsedHtml)
length("<link rel="stylesheet" href="images/PixelGreen.css" type="text/css">
<title>jeffrey leek contact</title>")
length('<link rel="stylesheet" href="images/PixelGreen.css" type="text/css">
<title>jeffrey leek contact</title>')
length('<link rel="stylesheet" href="images/PixelGreen.css" type="text/css">
<title>jeffrey leek contact</title>')[1]
nchar('<link rel="stylesheet" href="images/PixelGreen.css" type="text/css">
<title>jeffrey leek contact</title>')
html
class(html)
?response
html$response
html$cookies
html$time
html$html
content(html)
class(content(html))
content(html)[1]
content(html)[1,]
nchar(parsedHtml)
sqldf("select pwgtp1 from acs where AGEP < 50")
class(content(html))
download.files("http://biostat.jhsph.edu/~jleek/contact.html", "contact.html", method="curl")
download.file("http://biostat.jhsph.edu/~jleek/contact.html", "contact.html", method="curl")
?readLines
readLines("contact.html")
htmlData <- readLines("contact.html")
nchar(htmlData[10])
nchar(htmlData[10], htmlData[2-])
nchar(htmlData[10], htmlData[20])
nchar(c(htmlData[10], htmlData[20])
)
nchar(c(htmlData[10], htmlData[20], htmlData[30], htmlData[100])0
nchar(c(htmlData[10], htmlData[20], htmlData[30], htmlData[100]))
countLines <- nchar(c(htmlData[10], htmlData[20], htmlData[30], htmlData[100]))
countLines
download.file("https://d396qusza40orc.cloudfront.net/getdata-wksst8110.for", "q5.for", method="curl")
sstData <- readLines("getdata-wksst8110.for")
class(sstData)
head(sstData)
?readLines
sstData <- readLines("getdata-wksst8110.for", sep="\t")
read.fwf
?read.fwf
sstData <- read.fwf("getdata-wksst8110.for")
sstData <- read.fwf("getdata-wksst8110.for", widths=10)
head(sstData)
str(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=14)
head(sstData)
dim(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(14,14,14,14,14)
)
dim(sstData)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(14,3,3,5,3))
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(14,4,4,6,4))
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(14,4,4,6,4), skip=4)
head(sstData)
sum(sstData$V5)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(14,5,4,6,4), skip=4)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(14,5,5,6,4), skip=4)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(14,5,5,5), skip=4)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(9,5,5,5), skip=4)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(10,5,5,5), skip=4)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(10,6,5,5), skip=4)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(10,3), skip=4)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(10,6), skip=4)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(10,5,3), skip=4)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(10,5,4), skip=4)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(10,5,4,4,5,4), skip=4)
head(sstData)
sstData <- read.fwf("getdata-wksst8110.for", widths=c(10,5,4,4,5,4), skip=4)
sumCol4 <- sum(sstData$V6)
sumCol4
download.file("http://biostat.jhsph.edu/~jleek/contact.html", "contact.html", method="curl")
htmlData <- readLines("contact.html")
countLines <- nchar(c(htmlData[10], htmlData[20], htmlData[30], htmlData[100]))
countLines
?file.exists
getwd()
list.files()
file.exists('contact.html')
file.exists('contact1.html')
file.exists('contact1.html') {create.file('file.html')}
file.exists('contact1.html') create.file('file.html')
file.exists('contact1.html') file.create('file.html')
file.create('hile.html')
list.files()
file.remove('hile.html')
list.files()
getwd()
setwd("/Users/mehulmandania/Dropbox/sandbox/GettingCleaningData/week3)
""
)
)
